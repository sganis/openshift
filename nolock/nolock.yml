# apiVersion: template.openshift.io/v1
# kind: Template
# metadata:
#   name: nolock
#   namespace: sganis-dev
# objects:

apiVersion: v1
kind: List
items:
- apiVersion: v1
  data:
    MONGO_PASSWORD: MTIzNA==
    REDIS_PASSWORD: MTIzNA==
  kind: Secret
  metadata:
    name: nolock
    namespace: sganis-dev
  type: Opaque
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: mongodb
    namespace: sganis-dev
    labels:
      app: nolock
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    storageClassName: efs-sc
    volumeMode: Filesystem
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: redis
    namespace: sganis-dev
    labels:
      app: nolock
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
    storageClassName: efs-sc
    volumeMode: Filesystem
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: nolock
      component: frontend
    name: frontend
    namespace: sganis-dev
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nolock
        component: frontend
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.openshift.io/restartedAt: "2025-03-08T09:59:09.684Z"
        creationTimestamp: null
        labels:
          app: nolock
          component: frontend
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PORT
            value: "6379"
          - name: REDIS_DB
            value: "0"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: REDIS_PASSWORD
                name: nolock
          - name: MONGO_HOST
            value: mongodb
          - name: MONGO_PORT
            value: "27017"
          - name: MONGO_DB
            value: logs_db
          - name: MONGO_COLLECTION
            value: logs
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MONGO_PASSWORD
                name: nolock
          image: image-registry.openshift-image-registry.svc:5000/sganis-dev/frontend:latest
          imagePullPolicy: Always
          name: frontend
          ports:
          - containerPort: 5000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: nolock
    name: mongodb
    namespace: sganis-dev
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        deployment: mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          deployment: mongodb
      spec:
        containers:
        - env:
          - name: MONGO_INITDB_ROOT_PASSWORD
            value: "1234"
          - name: MONGO_INITDB_ROOT_USERNAME
            value: admin
          image: mongo@sha256:90bf5066fed8a3cd59345d963922bc5cb557d4b4b2a0e38dfd9ee299c405741b
          imagePullPolicy: IfNotPresent
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data/db
            name: mongodb
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - name: mongodb
            emptyDir: {}
            # persistentVolumeClaim:
            #   claimName: mongodb
    observedGeneration: 2
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: nolock
      component: worker
    name: worker
    namespace: sganis-dev
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nolock
        component: worker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          openshift.openshift.io/restartedAt: "2025-03-08T09:51:49.267Z"
        creationTimestamp: null
        labels:
          app: nolock
          component: worker
      spec:
        containers:
        - env:
          - name: REDIS_HOST
            value: redis
          - name: REDIS_PORT
            value: "6379"
          - name: REDIS_DB
            value: "0"
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: REDIS_PASSWORD
                name: nolock
          - name: MONGO_HOST
            value: mongodb
          - name: MONGO_PORT
            value: "27017"
          - name: MONGO_DB
            value: logs_db
          - name: MONGO_COLLECTION
            value: logs
          - name: MONGO_PASSWORD
            valueFrom:
              secretKeyRef:
                key: MONGO_PASSWORD
                name: nolock
          image: image-registry.openshift-image-registry.svc:5000/sganis-dev/worker:latest
          imagePullPolicy: Always
          name: worker
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    observedGeneration: 5
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nolock
      app.kubernetes.io/part-of: nolock
    name: redis
    namespace: sganis-dev
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: redis
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: redis
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: REDIS_PASSWORD
                name: nolock
          image: image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:404eb18b54c078edc46d39a0d441ef0da8b8fabcc862fbeff032ee8ccbe6ec84
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/redis/data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - redis
        from:
          kind: ImageStreamTag
          name: redis:6-el8
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:404eb18b54c078edc46d39a0d441ef0da8b8fabcc862fbeff032ee8ccbe6ec84
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: nolock
    name: frontend
    namespace: sganis-dev
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: frontend:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /nolock/frontend
      git:
        ref: main
        uri: https://github.com/sganis/openshift.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: nolock
      app.kubernetes.io/part-of: nolock
    name: redis
    namespace: sganis-dev
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: redis
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: redis
      spec:
        containers:
        - env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: REDIS_PASSWORD
                name: nolock
          image: image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:404eb18b54c078edc46d39a0d441ef0da8b8fabcc862fbeff032ee8ccbe6ec84
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 6379
            timeoutSeconds: 1
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - test "$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)" == "PONG"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/redis/data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - redis
        from:
          kind: ImageStreamTag
          name: redis:6-el8
          namespace: openshift
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/openshift/redis@sha256:404eb18b54c078edc46d39a0d441ef0da8b8fabcc862fbeff032ee8ccbe6ec84
      type: ImageChange
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: nolock
    name: worker
    namespace: sganis-dev
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: worker:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /nolock/worker
      git:
        uri: https://github.com/sganis/openshift.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    successfulBuildsHistoryLimit: 5
    triggers:
    - generic:
        secretReference:
          name: worker-generic-webhook-secret
      type: Generic
    - github:
        secretReference:
          name: worker-github-webhook-secret
      type: GitHub
    - type: ConfigChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: nolock
    name: frontend
    namespace: sganis-dev
  spec:
    lookupPolicy:
      local: false
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: nolock
    name: mongodb
    namespace: sganis-dev
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: mongo:latest
      from:
        kind: DockerImage
        name: mongo:latest
      generation: 2
      importPolicy:
        importMode: Legacy
      name: latest
      referencePolicy:
        type: Source
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: nolock
    name: worker
    namespace: sganis-dev
  spec:
    lookupPolicy:
      local: false
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nolock
    name: frontend
    namespace: sganis-dev
  spec:
    clusterIP: 172.30.71.116
    clusterIPs:
    - 172.30.71.116
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5000
    selector:
      app: nolock
      component: frontend
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nolock
      app.kubernetes.io/component: mongodb
      app.kubernetes.io/instance: mongodb
    name: mongodb
    namespace: sganis-dev
  spec:
    clusterIP: 172.30.20.198
    clusterIPs:
    - 172.30.20.198
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: 27017-tcp
      port: 27017
      protocol: TCP
      targetPort: 27017
    selector:
      deployment: mongodb
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nolock
    name: redis
    namespace: sganis-dev
  spec:
    clusterIP: 172.30.66.19
    clusterIPs:
    - 172.30.66.19
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: redis
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      name: redis
    sessionAffinity: None
    type: ClusterIP
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/balance: roundrobin
      haproxy.router.openshift.io/disable_cookies: "true"
    labels:
      app: nolock
    name: frontend
    namespace: sganis-dev
  spec:
    host: frontend-sganis-dev.apps.rm1.0a51.p1.openshiftapps.com
    port:
      targetPort: http
    tls:
      termination: edge
    to:
      kind: Service
      name: frontend
      weight: 100
    wildcardPolicy: None
