apiVersion: v1
kind: List
items:  

# secret
- apiVersion: v1
  kind: Secret
  metadata:
    name: btc
    namespace: sganis-dev
  type: Opaque
  data:
    rpcpassword: U2VjcmV0MSE=
    
# pvc
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: btcd-data
    namespace: sganis-dev
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: efs.csi.aws.com
      volume.kubernetes.io/storage-provisioner: efs.csi.aws.com
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    storageClassName: efs-sc
    volumeMode: Filesystem
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: lnd-1-data
    namespace: sganis-dev
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: efs.csi.aws.com
      volume.kubernetes.io/storage-provisioner: efs.csi.aws.com
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    storageClassName: efs-sc
    volumeMode: Filesystem
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: lnd-2-data
    namespace: sganis-dev
    annotations:
      volume.beta.kubernetes.io/storage-provisioner: efs.csi.aws.com
      volume.kubernetes.io/storage-provisioner: efs.csi.aws.com
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
    storageClassName: efs-sc
    volumeMode: Filesystem

# deployment
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: btcd
    namespace: sganis-dev
    annotations:
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"btcd:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"btcd\")].image"}]'
    labels:
      app: btc
      component: btcd
      app.kubernetes.io/part-of: btc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: btc
        component: btcd
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    template:
      metadata:
        annotations:
          openshift.openshift.io/restartedAt: "2025-04-12T10:00:00.000Z"
        labels:
          app: btc
          component: btcd
      spec:
        containers:
          - name: btcd
            image: btcd:latest
            imagePullPolicy: Always
            args:
              - "-datadir=/home/bitcoin/.bitcoin"
              - "-regtest=1"
              - "-txindex=1"
              - "-server=1"
              - "-rpcuser=bitcoin"
              - "-rpcpassword=$(RPC_PASSWORD)"
              - "-rpcbind=0.0.0.0"
              - "-rpcallowip=0.0.0.0/0"
              - "-zmqpubrawblock=tcp://0.0.0.0:28332"
              - "-zmqpubrawtx=tcp://0.0.0.0:28333"
            env:
              - name: RPC_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: btc
                    key: rpcpassword
            ports:
              - containerPort: 18444  # P2P
              - containerPort: 18443  # RPC
              - containerPort: 28332  # ZMQ block
              - containerPort: 28333  # ZMQ tx
            volumeMounts:
              - name: btcd-data
                mountPath: /home/bitcoin/.bitcoin
            resources: 
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 200m
                memory: 256Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        volumes:
          - name: btcd-data
            persistentVolumeClaim:
              claimName: btcd-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ln-1
    namespace: sganis-dev
    annotations:
      app.openshift.io/connects-to: >-
        [{"apiVersion":"apps/v1","kind":"Deployment","name":"btcd"}] 
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"lnd:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"lnd-1\")].image"}]'
    labels:
      app: btc
      component: lnd-1
      app.kubernetes.io/part-of: btc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: btc
        component: lnd-1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    template:
      metadata:
        labels:
          app: btc
          component: lnd-1
      spec:
        containers:
          - name: lnd-1
            image: lnd:latest
            imagePullPolicy: Always
            args:
              - "--lnddir=/data/.lnd"
              - "--bitcoin.regtest"
              - "--bitcoin.node=bitcoind"
              - "--bitcoind.rpchost=btcd:18443"
              - "--bitcoind.rpcuser=bitcoin"
              - "--bitcoind.rpcpass=$(RPC_PASSWORD)"
              - "--bitcoind.zmqpubrawblock=tcp://btcd:28332"
              - "--bitcoind.zmqpubrawtx=tcp://btcd:28333"
              - "--restlisten=0.0.0.0:8080"
              - "--rpclisten=0.0.0.0:10009"
              - "--listen=0.0.0.0:9735"
            env:
              - name: RPC_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: btc
                    key: rpcpassword
            ports:
              - containerPort: 9735
              - containerPort: 10009
              - containerPort: 8080
            volumeMounts:
              - mountPath: /data/.lnd
                name: lnd-1-data
            resources: 
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 200m
                memory: 256Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        volumes:
          - name: lnd-1-data
            persistentVolumeClaim:
              claimName: lnd-1-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: ln-2
    namespace: sganis-dev
    annotations:
      app.openshift.io/connects-to: >-
        [{"apiVersion":"apps/v1","kind":"Deployment","name":"btcd"}] 
      image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"lnd:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"lnd-2\")].image"}]'
    labels:
      app: btc
      component: lnd-2
      app.kubernetes.io/part-of: btc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: btc
        component: lnd-2
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    template:
      metadata:
        labels:
          app: btc
          component: lnd-2
      spec:
        containers:
          - name: lnd-2
            image: lnd:latest
            imagePullPolicy: Always
            args:
              - "--lnddir=/data/.lnd"
              - "--bitcoin.regtest"
              - "--bitcoin.node=bitcoind"
              - "--bitcoind.rpchost=btcd:18443"
              - "--bitcoind.rpcuser=bitcoin"
              - "--bitcoind.rpcpass=$(RPC_PASSWORD)"
              - "--bitcoind.zmqpubrawblock=tcp://btcd:28332"
              - "--bitcoind.zmqpubrawtx=tcp://btcd:28333"
              - "--restlisten=0.0.0.0:8080"
              - "--rpclisten=0.0.0.0:10009"
              - "--listen=0.0.0.0:9735"
            env:
              - name: RPC_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: btc
                    key: rpcpassword
            ports:
              - containerPort: 9735
              - containerPort: 10009
              - containerPort: 8080
            volumeMounts:
              - mountPath: /data/.lnd
                name: lnd-2-data
            resources: 
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 200m
                memory: 256Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        volumes:
          - name: lnd-2-data
            persistentVolumeClaim:
              claimName: lnd-2-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        terminationGracePeriodSeconds: 30

# buldconfig
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: btc
    name: btcd
    namespace: sganis-dev
  spec:
    failedBuildsHistoryLimit: 3
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: btcd:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /btc/btcd
      git:
        ref: main
        uri: https://github.com/sganis/openshift.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    successfulBuildsHistoryLimit: 3
    triggers:
    - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: btc
    name: lnd
    namespace: sganis-dev
  spec:
    failedBuildsHistoryLimit: 3
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: lnd:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      contextDir: /btc/lnd
      git:
        ref: main
        uri: https://github.com/sganis/openshift.git
      type: Git
    strategy:
      dockerStrategy:
        dockerfilePath: Dockerfile
      type: Docker
    successfulBuildsHistoryLimit: 3
    triggers:
    - type: ConfigChange

# image
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: btc
    name: btcd
    namespace: sganis-dev
  spec:
    lookupPolicy:
      local: true
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      app: btc
    name: lnd
    namespace: sganis-dev
  spec:
    lookupPolicy:
      local: true

# svc
- apiVersion: v1
  kind: Service
  metadata:
    name: btcd
    namespace: sganis-dev
    labels:
      app: btc
  spec:
    selector:
      app: btc
      component: btcd
    ports:
      - name: rpc
        port: 18443
        targetPort: 18443
      - name: p2p
        port: 18444
        targetPort: 18444
      - name: zmqblock
        port: 28332
        targetPort: 28332
      - name: zmqbtx
        port: 28333
        targetPort: 28333
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: lnd-1
    namespace: sganis-dev
    labels:
      app: btc
  spec:
    selector:
      app: btc
      component: lnd-1
    ports:
      - name: p2p
        port: 9735
        targetPort: 9735
      - name: grpc
        port: 10009
        targetPort: 10009
      - name: rest
        port: 8080
        targetPort: 8080
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    name: lnd-2
    namespace: sganis-dev
    labels:
      app: btc
  spec:
    selector:
      app: btc
      component: lnd-2
    ports:
      - name: p2p
        port: 9735
        targetPort: 9735
      - name: grpc
        port: 10009
        targetPort: 10009
      - name: rest
        port: 8080
        targetPort: 8080
    type: ClusterIP



