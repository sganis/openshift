apiVersion: build.openshift.io/v1
kind: BuildConfig
metadata:
  name: hello
  namespace: sganis-dev
  labels:
    app: hello
  annotations:
    app.openshift.io/vcs-uri: https://github.com/sganis/openshift.git
spec:
  source:
    type: Git
    contextDir: /hello
    git:
      ref: main
      uri: "https://github.com/sganis/openshift.git"  # Uses Dockerfile from repo root
  strategy:
    type: Docker
  output:
    to:
      kind: ImageStreamTag
      name: hello:latest
  triggers:
    - type: ConfigChange
    - type: ImageChange

---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: hello
  namespace: sganis-dev
  labels:
    app: hello

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    app.openshift.io/vcs-uri: https://github.com/sganis/openshift.git
    deployment.kubernetes.io/revision: "2"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"hello:latest","namespace":"sganis-dev"},"fieldPath":"spec.template.spec.containers[?(@.name==\"hello\")].image","paused":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: hello
    app.kubernetes.io/component: hello
    app.kubernetes.io/instance: hello
    app.kubernetes.io/name: hello
    app.kubernetes.io/part-of: hello
  name: hello
  namespace: sganis-dev
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: hello
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: hello
        deployment: hello
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/sganis-dev/hello:latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: hello
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/vcs-uri: https://github.com/sganis/openshift.git
  labels:
    app: hello
    app.kubernetes.io/component: hello
    app.kubernetes.io/instance: hello
    app.kubernetes.io/name: hello
    app.kubernetes.io/part-of: hello
  name: hello
  namespace: sganis-dev
spec:
  clusterIP: 172.30.60.14
  clusterIPs:
  - 172.30.60.14
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: hello
    deployment: hello
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    app.openshift.io/vcs-uri: https://github.com/sganis/openshift.git
    haproxy.router.openshift.io/balance: roundrobin
    haproxy.router.openshift.io/disable_cookies: "true"
  labels:
    app: hello
    app.kubernetes.io/component: hello
    app.kubernetes.io/instance: hello
    app.kubernetes.io/name: hello
    app.kubernetes.io/part-of: hello
  name: hello
  namespace: sganis-dev
spec:
  host: hello-sganis-dev.apps.rm1.0a51.p1.openshiftapps.com
  port:
    targetPort: 8080-tcp
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: hello
    weight: 100
  wildcardPolicy: None
# ---
# apiVersion: route.openshift.io/v1
# kind: Route
# metadata:
#   name: hello
#   namespace: sganis-dev
# annotations:
#     app.openshift.io/vcs-uri: https://github.com/sganis/openshift.git
#     haproxy.router.openshift.io/balance: roundrobin
#     haproxy.router.openshift.io/disable_cookies: "true"
# labels:
#     app: hello
#     app.kubernetes.io/component: hello
#     app.kubernetes.io/instance: hello
#     app.kubernetes.io/name: hello
#     app.kubernetes.io/part-of: hello
# spec:
#   host: hello.chaintrust.com  
#   port:
#     targetPort: 8080-tcp
#   tls:
#     insecureEdgeTerminationPolicy: Redirect
#     termination: edge
#   to:
#     kind: Service
#     name: hello
#     weight: 100
#   wildcardPolicy: None
